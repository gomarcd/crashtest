name: Test MSIX Package Creation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '0.0.1'

jobs:
  build-msix:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.9.0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Install ImageMagick
        shell: powershell
        run: |
          choco install imagemagick -y
          # Verify installation
          magick -version

      - name: Setup Icon for Wails
        shell: powershell
        run: |
          mkdir -p build/windows
          magick convert ./appicon.png -define icon:auto-resize=256,128,64,48,32,16 build/windows/icon.ico
          if (Test-Path build/windows/icon.ico) {
            Write-Host "Successfully created icon.ico"
          } else {
            Write-Error "Failed to create icon.ico"
            exit 1
          }

      - name: Copy app icon
        shell: bash
        run: |
          mkdir -p build
          cp ./appicon.png build/appicon.png

      - name: Build Wails app
        run: wails build
        env:
          APP_NAME: ${{ secrets.APP_NAME }}

      - name: Create MSIX Package
        shell: powershell
        run: |
          $sdkPath = $null
          $possibleSdkVersions = @("10.0.22621.0", "10.0.22000.0", "10.0.20348.0", "10.0.19041.0", "10.0.18362.0")
          foreach ($version in $possibleSdkVersions) {
            if (Test-Path "C:\Program Files (x86)\Windows Kits\10\bin\$version\x64\MakeAppx.exe") {
              $sdkPath = "C:\Program Files (x86)\Windows Kits\10\bin\$version\x64"
              Write-Host "Found Windows SDK tools at: $sdkPath"
              break
            }
          }
          if (-not $sdkPath) {
            Write-Error "Could not find Windows SDK tools."
            exit 1
          }
          mkdir -p AppxPackage
          Copy-Item -Path "build\bin\${env:APP_NAME}.exe" -Destination "AppxPackage\"
          $xmlContent = '<?xml version="1.0" encoding="utf-8"?>'
          $xmlContent += '<Package xmlns="http://schemas.microsoft.com/appx/manifest/foundation/windows10" xmlns:uap="http://schemas.microsoft.com/appx/manifest/uap/windows10" xmlns:rescap="http://schemas.microsoft.com/appx/manifest/foundation/windows10/restrictedcapabilities">'
          $xmlContent += "<Identity Name=`"BreakthroughSoftwareInc.Crashtest`" Version=`"${{ github.event.inputs.version }}.0`" Publisher=`"CN=4C5C21A7-60BF-4E75-A4A0-1D3AF18BFDAC`" ProcessorArchitecture=`"x64`" />"
          $xmlContent += '<Properties>'
          $xmlContent += "<DisplayName>${env:APP_NAME}</DisplayName>"
          $xmlContent += '<PublisherDisplayName>Breakthrough Software Inc.</PublisherDisplayName>'
          $xmlContent += '<Logo>Assets\StoreLogo.png</Logo>'
          $xmlContent += '</Properties>'
          $xmlContent += '<Dependencies>'
          $xmlContent += '<TargetDeviceFamily Name="Windows.Desktop" MinVersion="10.0.17763.0" MaxVersionTested="10.0.19041.0" />'
          $xmlContent += '</Dependencies>'
          $xmlContent += '<Resources>'
          $xmlContent += '<Resource Language="en-us" />'
          $xmlContent += '</Resources>'
          $xmlContent += '<Applications>'
          $xmlContent += "<Application Id=`"App`" Executable=`"${env:APP_NAME}.exe`" EntryPoint=`"Windows.FullTrustApplication`">"
          $xmlContent += '<uap:VisualElements DisplayName="' + $env:APP_NAME + '" Description="The minimal API client" BackgroundColor="transparent" Square150x150Logo="Assets\Square150x150Logo.png" Square44x44Logo="Assets\Square44x44Logo.png">'
          $xmlContent += '<uap:DefaultTile Wide310x150Logo="Assets\Wide310x150Logo.png" Square71x71Logo="Assets\SmallTile.png" Square310x310Logo="Assets\LargeTile.png" />'
          $xmlContent += '</uap:VisualElements>'
          $xmlContent += '</Application>'
          $xmlContent += '</Applications>'
          $xmlContent += '<Capabilities>'
          $xmlContent += '<rescap:Capability Name="runFullTrust" />'
          $xmlContent += '</Capabilities>'
          $xmlContent += '</Package>'
          $xmlContent | Out-File -FilePath "AppxPackage\AppxManifest.xml" -Encoding utf8
          mkdir -p AppxPackage\Assets
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\StoreLogo.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\Square150x150Logo.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\Square44x44Logo.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\Wide310x150Logo.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\SmallTile.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\LargeTile.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\Square44x44Logo.targetsize-44_altform-unplated.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\Square44x44Logo.targetsize-32_altform-unplated.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\Square44x44Logo.targetsize-24_altform-unplated.png
          magick convert ./appicon.png -define png:color-type=6 -channel RGBA -alpha set -background transparent AppxPackage\Assets\Square44x44Logo.targetsize-16_altform-unplated.png
          & "$sdkPath\MakeAppx.exe" pack /nc /d AppxPackage /p "${env:APP_NAME}_${{ github.event.inputs.version }}_amd64.msix"
          Write-Host "Unsigned MSIX package created for testing with the Microsoft Store."
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          BUNDLE_ID: ${{ secrets.BUNDLE_ID }}

      - name: Upload MSIX package
        uses: actions/upload-artifact@v4
        with:
          name: msix-test-package
          path: ${{ secrets.APP_NAME }}_${{ github.event.inputs.version }}_amd64.msix
          if-no-files-found: error