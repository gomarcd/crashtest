name: Release Crashtest

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: Crashtest_linux_amd64
          - os: macos-latest
            platform: darwin
            artifact_name: Crashtest_darwin_universal.zip
          - os: windows-latest
            platform: windows
            artifact_name: Crashtest_windows_amd64.exe

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'
          check-latest: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev || sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev
          # Create symbolic link for pkg-config if using 4.1
          if [ -f /usr/lib/pkgconfig/webkit2gtk-4.1.pc ] && [ ! -f /usr/lib/pkgconfig/webkit2gtk-4.0.pc ]; then
            sudo ln -s /usr/lib/pkgconfig/webkit2gtk-4.1.pc /usr/lib/pkgconfig/webkit2gtk-4.0.pc
          fi

      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          wails version

      - name: Build Windows
        if: matrix.platform == 'windows'
        run: |
          cd frontend
          npm install
          cd ..
          wails build -o APIClient
          dir build\bin
          Copy-Item -Path "build\bin\APIClient.exe" -Destination "build\bin\${{ matrix.artifact_name }}"
          dir build\bin

      - name: Build macOS
        if: matrix.platform == 'darwin'
        run: |
          cd frontend
          npm install
          cd ..
          wails build -o APIClient -platform darwin/universal
          cd build/bin
          ls -la
          zip -r "${{ matrix.artifact_name }}" APIClient.app
          ls -la

      - name: Build Linux
        if: matrix.platform == 'linux'
        run: |
          cd frontend
          npm install
          cd ..
          wails build -o Crashtest -tags webkit2_41
          ls -la build/bin
          mv build/bin/Crashtest "build/bin/${{ matrix.artifact_name }}"
          ls -la build/bin

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            build/bin/${{ matrix.artifact_name }}
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: List artifacts
        run: find ./artifacts -type f | sort
        
      - name: Prepare artifacts for release
        run: |
          mkdir -p ./release
          cp ./artifacts/Crashtest_linux_amd64/Crashtest_linux_amd64 ./release/
          cp ./artifacts/Crashtest_windows_amd64.exe/Crashtest_windows_amd64.exe ./release/
          cp ./artifacts/Crashtest_darwin_universal.zip/Crashtest_darwin_universal.zip ./release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release/*
          draft: false
          prerelease: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}