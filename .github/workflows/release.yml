name: Release Crashtest

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: Crashtest_linux_amd64
            binary_name: Crashtest
          - os: macos-latest
            platform: darwin
            artifact_name: Crashtest_darwin_universal
            binary_name: Crashtest
          - os: windows-latest
            platform: windows
            artifact_name: Crashtest_windows_amd64.exe
            binary_name: Crashtest.exe

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build for Windows
        if: matrix.platform == 'windows'
        run: |
          wails build -o Crashtest
          Rename-Item -Path "build\bin\Crashtest.exe" -NewName "${{ matrix.artifact_name }}"

      - name: Build for macOS
        if: matrix.platform == 'darwin'
        run: |
          wails build -o Crashtest -platform darwin/universal
          cd build/bin
          zip -r ${{ matrix.artifact_name }}.zip Crashtest.app
          mv ${{ matrix.artifact_name }}.zip ${{ matrix.artifact_name }}

      - name: Build for Linux
        if: matrix.platform == 'linux'
        run: |
          wails build -o Crashtest
          mv build/bin/Crashtest build/bin/${{ matrix.artifact_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: build/bin/${{ matrix.artifact_name }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/Crashtest_linux_amd64/*
            artifacts/Crashtest_darwin_universal/*
            artifacts/Crashtest_windows_amd64.exe/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}