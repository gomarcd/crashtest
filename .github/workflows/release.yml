name: Release
on:
  push:
    tags:
      - 'v*'

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  determine-platforms:
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.extract-app-info.outputs.app_name }}
      build-windows: ${{ steps.check-tag.outputs.build-windows }}
      build-darwin: ${{ steps.check-tag.outputs.build-darwin }}
      build-linux: ${{ steps.check-tag.outputs.build-linux }}
      is_prerelease: ${{ steps.check-tag.outputs.is_prerelease }}
      tag_name: ${{ steps.check-tag.outputs.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract app name
        id: extract-app-info
        run: |
          APP_NAME=$(grep -m 1 '"name"' wails.json | cut -d '"' -f 4)
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT

      - name: Determine platforms and release type
        id: check-tag
        run: |
          TAG_NAME="${{ github.ref_name }}"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          IS_PRERELEASE="false"
          BUILD_WINDOWS="true"
          BUILD_DARWIN="true"
          BUILD_LINUX="true"

          if [[ "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            IS_PRERELEASE="false"
          elif [[ "$TAG_NAME" =~ -win$ ]]; then
            BUILD_WINDOWS="true"
            BUILD_DARWIN="false"
            BUILD_LINUX="false"
            IS_PRERELEASE="true"
          elif [[ "$TAG_NAME" =~ -mac$ ]]; then
            BUILD_WINDOWS="false"
            BUILD_DARWIN="true"
            BUILD_LINUX="false"
            IS_PRERELEASE="true"
          elif [[ "$TAG_NAME" =~ -linux$ ]]; then
            BUILD_WINDOWS="false"
            BUILD_DARWIN="false"
            BUILD_LINUX="true"
            IS_PRERELEASE="true"
          elif [[ "$TAG_NAME" =~ (-|alpha|beta|rc) ]]; then
            IS_PRERELEASE="true"
          fi

          echo "build-windows=$BUILD_WINDOWS" >> $GITHUB_OUTPUT
          echo "build-darwin=$BUILD_DARWIN" >> $GITHUB_OUTPUT
          echo "build-linux=$BUILD_LINUX" >> $GITHUB_OUTPUT
          echo "is_prerelease=$IS_PRERELEASE" >> $GITHUB_OUTPUT

  build:
    needs: determine-platforms
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows/amd64
            os: windows-latest
            build-flag: build-windows
            artifact-suffix: windows-amd64
          - platform: darwin/universal
            os: macos-latest
            build-flag: build-darwin
            artifact-suffix: darwin-universal
          - platform: linux/amd64
            os: ubuntu-latest
            build-flag: build-linux
            artifact-suffix: linux-amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wails
        if: ${{ needs.determine-platforms.outputs[matrix.build-flag] == 'true' }}
        uses: dAppServer/wails-build-action@main
        id: build
        with:
          build-name: ${{ needs.determine-platforms.outputs.app_name }}
          build-platform: ${{ matrix.platform }}
          package: false
          go-version: '1.23'

      - name: Upload build artifact
        if: ${{ needs.determine-platforms.outputs[matrix.build-flag] == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.determine-platforms.outputs.app_name }}-${{ matrix.artifact-suffix }}
          path: build/bin/
          retention-days: 1
          if-no-files-found: warn

  release:
    needs: [determine-platforms, build]
    runs-on: ubuntu-latest
    if: always() && !cancelled() && needs.determine-platforms.result == 'success'
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Check downloaded artifacts
        id: check_artifacts
        run: |
          if [ -z "$(find ./artifacts -type f)" ]; then
            echo "::warning::No artifacts found to release. This might happen if all build jobs failed or were skipped."
            echo "upload_files=false" >> $GITHUB_OUTPUT
          else
            echo "Artifacts found:"
            find ./artifacts -ls
            echo "upload_files=true" >> $GITHUB_OUTPUT
          fi

      - name: Prepare release assets
        if: steps.check_artifacts.outputs.upload_files == 'true'
        run: |
          mkdir release_assets
          APP_NAME="${{ needs.determine-platforms.outputs.app_name }}"
          cp ./artifacts/*windows*/"$APP_NAME.exe" ./release_assets/ 2>/dev/null || true
          cp ./artifacts/*linux*/"$APP_NAME" ./release_assets/ 2>/dev/null || true
          cp ./artifacts/*darwin*/"$APP_NAME.app.zip" ./release_assets/ 2>/dev/null || true
          echo "Prepared release assets:"
          ls -l release_assets

      - name: Create GitHub Release
        if: steps.check_artifacts.outputs.upload_files == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.determine-platforms.outputs.tag_name }}
          files: ./release_assets/*
          draft: false
          prerelease: ${{ needs.determine-platforms.outputs.is_prerelease == 'true' }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}